/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package part1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        // hataları detaylı olarak gösteriyor bu logger kütüphanesi
        Logger logger = LogManager.getLogger(App.class);
        logger.error("Hello worldd");

        // spark default olarak 4567. porttan çalışır heroku ise kendisi sanal makineden
        // bir port seçecek. Bu yüzden port ayarlamamız gerekiyor.
        int port = Integer.parseInt(System.getenv("PORT"));
        port(port);
        logger.error("Current port number: " + port);

        get("/", (req, res) -> "Hello world");
        get("/compute",
                (rq, rs) -> {
                    Map<String, String> map = new HashMap<String, String>();
                    map.put("result", "not compute.mustache");
                    return new ModelAndView(map, "compute.mustache");
                },
                new MustacheTemplateEngine());

        post("/compute", (req, res) -> {
            String kaloriler = req.queryParams("kaloriler");
            java.util.Scanner sc1 = new java.util.Scanner(kaloriler);
            sc1.useDelimiter("[;\r\n]+");
            java.util.ArrayList<Integer> kalorilerList = new java.util.ArrayList<>();
            while (sc1.hasNext()) {
                int value = Integer.parseInt(sc1.next().replaceAll("\\s", ""));
                kalorilerList.add(value);

            }
            sc1.close();
            System.out.println(kalorilerList);

            String yas = req.queryParams("yas").replaceAll("\\s", "");
            int yasAsaInt = Integer.parseInt(yas);

            String boy = req.queryParams("boy").replaceAll("\\s", "");
            int boyAsaInt = Integer.parseInt(boy);

            String kilo = req.queryParams("kilo").replaceAll("\\s", "");
            int kiloAsaInt = Integer.parseInt(kilo);

            boolean result = App.kaloriKontrol(kalorilerList, boyAsaInt, yasAsaInt, kiloAsaInt);
            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");

        },
                new MustacheTemplateEngine());

    }

    public static boolean kaloriKontrol(ArrayList<Integer> array, int boy, int yas, int kilo) {
        System.out.println("Inside Search");

        int toplam = 0, kalori = 0;
        if (array != null) {
            for (int i : array) {
                toplam += i;
            }

            kalori = (int) (10 * kilo + 6.25 * boy - 5 * yas + 5);

            if (toplam > kalori) {
                return false; // * gerekenden fazla kalori
            }
            if (toplam == kalori || kalori > toplam) {
                return true;
            }
        }

        return false;
    }

}
